version: '3.9'
services:
  app:
    build:
      context: .
      dockerfile: system/Dockerfile
    container_name: backend
    entrypoint: ./entrypoint-app.sh
    restart: always
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - db

  db:
    image: postgres:14.2-alpine
    container_name: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    volumes:
      - ./shared-files/database/dump:/app/dump
      - ./shared-files/database/postgresql:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.8-alpine
    container_name: rabbit-mq
    ports:
      - '15672:15672'
      - '5672:5672'
    environment:
      RABBITMQ_DEFAULT_VHOST: '${RABBITMQ_DEFAULT_VHOST}'
      RABBITMQ_DEFAULT_USER: '${RABBITMQ_DEFAULT_USER}'
      RABBITMQ_DEFAULT_PASS: '${RABBITMQ_DEFAULT_PASS}'

  worker:
    build:
      context: .
      dockerfile: system/Dockerfile
    container_name: worker
    entrypoint: ./entrypoint-celery-worker.sh
    env_file:
      .env
    depends_on:
      - app
      - rabbitmq
      - db
  beat:
    build:
      context: .
      dockerfile: system/Dockerfile
    container_name: beat
    entrypoint: ./entrypoint-celery-beat.sh
    env_file:
      .env
    depends_on:
      - app
      - rabbitmq
      - db
